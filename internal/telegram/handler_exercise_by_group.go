package telegram

import (
	"context"
	"fmt"
)

func muscleGroupName(eng string) string {
	muscleNames := map[string]string{
		"legs":      "–ù–æ–≥–∏",
		"back":      "–°–ø–∏–Ω–∞",
		"chest":     "–ì—Ä—É–¥–Ω—ã–µ",
		"shoulders": "–ü–ª–µ—á–∏",
		"biceps":    "–ë–∏—Ü–µ–ø—Å",
		"triceps":   "–¢—Ä–∏—Ü–µ–ø—Å",
		"calves":    "–ò–∫—Ä—ã",
		"press":     "–ü—Ä–µ—Å—Å",
	}

	if name, ok := muscleNames[eng]; ok {
		return name
	}
	return eng
}

func (h *Handler) HandleExerciseByGroup(chatID int64, muscleGroup string) {

	exercise, err := h.exerciseSVC.GetExerciseByGroup(context.Background(), muscleGroup)
	if err != nil {
		h.HandleSendMessage(chatID, "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π", nil)
		return
	}
	if len(exercise) == 0 {
		h.HandleSendMessage(chatID, "–î–ª—è —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã –º—ã—à—Ü –Ω–µ—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π", nil)
	}

	btn := GenerateExerciseButtons(exercise)
	muscleName := muscleGroupName(muscleGroup)
	txt := fmt.Sprintf("–í—ã–±—Ä–∞–Ω–∞ –≥—Ä—É–ø–ø–∞ –º—ã—à—Ü: %s\n\n–í—ã–±–∏—Ä–∞–π —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ üëá", muscleName)

	h.HandleSendMessage(chatID, txt, btn)

}
